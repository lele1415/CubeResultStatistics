<Html>
<Head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<Title>666</Title>
</Head>
<Body bgcolor="#FFFFFF">

url:<input type="text" id="url">
<input type="button" id="getCode_id" onclick="getTextFromCode()" value="get!" />

<Script Language="JavaScript"> 

//用于创建XMLHttpRequest对象 
function createXmlHttp() { 
    //根据window.XMLHttpRequest对象是否存在使用不同的创建方式 
    if (window.XMLHttpRequest) { 
        xmlHttp = new XMLHttpRequest(); //FireFox、Opera等浏览器支持的创建方式 
    } else { 
        xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");//IE浏览器支持的创建方式 
    } 
} 

function getUrl() {
    var url = document.getElementById("url").value;
    return url;
}

//直接通过XMLHttpRequest对象获取远程网页源代码 
function getSource(url) { 
    //document.getElementById("source").value = "正在加载……"; //提示正在加载 
    createXmlHttp(); //创建XMLHttpRequest对象 
    xmlHttp.onreadystatechange = writeSource; //设置回调函数 
    xmlHttp.open("GET", url, true); 
    xmlHttp.send(null); 
} 

//将远程网页源代码写入页面文字区域 
function writeSource() { 
    if (xmlHttp.readyState == 4) { 
        //document.getElementById("source").value = xmlHttp.responseText; 
        writeToTxt(xmlHttp.responseText);
    } 
} 
</Script>
<Script Language="VBScript">

Dim width,height
width=CreateObject("HtmlFile").ParentWindow.Screen.AvailWidth
Window.MoveTo width-400,300
Window.ResizeTo 400,240

Dim ws, Fso, codeTxtPath, resultData(), userNameData(), countData
Set ws=CreateObject("wscript.shell")
Set Fso=CreateObject("Scripting.FileSystemObject")
codeTxtPath = ws.CurrentDirectory&"\temp.txt"
resultTxtPath = ws.CurrentDirectory&"\Test.txt"
countData = 0

Sub Sleep(MSecs)  
    Dim fso
    Dim objOutputFile

    Set fso = CreateObject("Scripting.FileSystemObject") 
    If Fso.FileExists("sleeper.vbs")=False Then 
        Set objOutputFile = fso.CreateTextFile("sleeper.vbs", True) 
        objOutputFile.Write "wscript.sleep WScript.Arguments(0)" 
        objOutputFile.Close 
    End If 
     CreateObject("WScript.Shell").Run "sleeper.vbs " & MSecs,1 , True 
End Sub

Function checkTxtFile(FilePath)
    If Fso.FileExists(FilePath) Then
        Dim TxtFile
        Set TxtFile = Fso.getFile(FilePath)
        TxtFile.Delete
        Set TxtFile = Nothing
    End If    
    Fso.CreateTextFile FilePath, True
End Function

Function writeToTxt(responseText)
    Set oTxt = Fso.OpenTextFile(codeTxtPath,8)
    oTxt.Write(responseText)
    oTxt.Close
    Set oTxt = Nothing
End Function

Function getInfoFromTxt(strSearch, strStart, numStart, strEnd, numEnd)
    Dim oTxt, getStrLine, MaxPage
    Set oTxt = Fso.OpenTextFile(codeTxtPath,1)

    Do Until oTxt.AtEndOfStream
        getStrLine = oTxt.ReadLine
        If InStr(getStrLine,strSearch) > 0 Then
            Exit Do
        End If
    Loop
    Set oTxt = Nothing
    countStart = InStr(getStrLine,strStart) + numStart
    countEnd = InStr(getStrLine,strEnd) + numEnd
    'Msgbox(countStart & " " & countEnd)
    getInfoFromTxt = Mid(getStrLine, countStart, countEnd-countStart)
End Function

Function getArrayFromTxt(strSearch, strStart, numStart, strEnd, numEnd)
    Dim oTxt, getStrLine, MaxPage, strArray(), count
    Set oTxt = Fso.OpenTextFile(codeTxtPath,1)
    count = 0
    Do Until oTxt.AtEndOfStream
        getStrLine = oTxt.ReadLine
        If InStr(getStrLine,strSearch) > 0 Then
            ReDim Preserve strArray(count)
            countStart = InStr(getStrLine,strStart) + numStart
            countEnd = InStr(getStrLine,strEnd) + numEnd
            'Msgbox(countStart & " " & countEnd)
            strArray(count) = Mid(getStrLine, countStart, countEnd-countStart)
            count = count + 1
        End If
    Loop
    Set oTxt = Nothing
    getArrayFromTxt = strArray
End Function

Function getTimesAppearInStr(str1, str2)
    Dim count, tmpStr1, tmpStr2
    count = 0
    tmpStr1 = str1
    tmpStr2 = str2
    If InStr(tmpStr1, tmpStr2) > 0 Then
	    Do Until Not (InStr(tmpStr1, tmpStr2) > 0)
	        tmpStr1 = RePlace(tmpStr1, tmpStr2, "", 1, 1)
	        count = count + 1
	    Loop
    End If
    getTimesAppearInStr = count
End Function

Function getAllStepInStr(str1, str2)
    Dim count, stepArray(), tmpStr1, tmpStr2
    count = 0
    tmpStr1 = str1
    tmpStr2 = str2
    If InStr(tmpStr1, tmpStr2) > 0 Then
	    Do Until Not (InStr(tmpStr1, tmpStr2) > 0)
	    	ReDim Preserve stepArray(count)
	    	stepArray(count) = InStr(tmpStr1, tmpStr2) + count * Len(tmpStr2)
	        tmpStr1 = RePlace(tmpStr1, tmpStr2, "", 1, 1)
	        count = count + 1
	    Loop
        getAllStepInStr = stepArray
    Else
        ReDim Preserve stepArray(0)
        getAllStepInStr = stepArray
    End If
End Function

Function msgboxArray(strArray)
    Dim tmpStr
    For count = 0 To UBound(strArray)
    	tmpStr = tmpStr & " " & strArray(count)
    Next
    Msgbox(tmpStr)
End Function

Function getExistInArray(strArray, str)
    Dim countFinded, count
    countFinded = ""
    For count = 0 To UBound(strArray)
        If str = strArray(count) Then
            countFinded = count
            Exit For
        End If
    Next
    getExistInArray = countFinded
End Function

Function isNumber(str)
    Dim flag, tmpArray(9)
    flag = False
    For i = 0 To 9
        If str = CStr(i) Then
            flag = True
            Exit For
        End If 
    Next
    isNumber = flag
End Function

Function isD(str)
    Dim flag, tmpArray(1)
    flag = False
    tmpArray(0) = "D"
    tmpArray(1) = "d"
    For i = 0 To UBound(tmpArray)
        If str = tmpArray(i) Then
            flag = True
        End If
    Next
    isD = flag
End Function

Function isN(str)
    Dim flag, tmpArray(1)
    flag = False
    tmpArray(0) = "N"
    tmpArray(1) = "n"
    For i = 0 To UBound(tmpArray)
        If str = tmpArray(i) Then
            flag = True
        End If
    Next
    isN = flag
End Function

Function isF(str)
    Dim flag, tmpArray(1)
    flag = False
    tmpArray(0) = "F"
    tmpArray(1) = "f"
    For i = 0 To UBound(tmpArray)
        If str = tmpArray(i) Then
            flag = True
        End If
    Next
    isF = flag
End Function

Function isPoint(str)
    Dim flag, tmpArray(1)
    flag = False
    tmpArray(0) = "."
    tmpArray(1) = "。"
    For i = 0 To UBound(tmpArray)
        If str = tmpArray(i) Then
            flag = True
        End If
    Next
    isPoint = flag
End Function

Function isColon(str)
    Dim flag, tmpArray(1)
    flag = False
    tmpArray(0) = ":"
    tmpArray(1) = "："
    For i = 0 To UBound(tmpArray)
        If str = tmpArray(i) Then
            flag = True
        End If
    Next
    isColon = flag
End Function

Function changeStrToSimple(str)
    Dim tmpStr, simpleStr
    tmpStr = str
    simpleStr = ""
    For searchStep = 1 To Len(tmpStr)
        Select Case True
            Case IsNumeric(Mid(tmpStr, searchStep, 1))
                simpleStr = simpleStr & "0"
            Case isD(Mid(tmpStr, searchStep, 1))
                simpleStr = simpleStr & "D"
            Case isN(Mid(tmpStr, searchStep, 1))
                simpleStr = simpleStr & "N"
            Case isF(Mid(tmpStr, searchStep, 1))
                simpleStr = simpleStr & "F"
            Case isPoint(Mid(tmpStr, searchStep, 1))
                simpleStr = simpleStr & "."
            Case isColon(Mid(tmpStr, searchStep, 1))
                simpleStr = simpleStr & ":"
            Case Else
                simpleStr = simpleStr & "_"
        End Select
    Next
    simpleStr = RePlace(simpleStr, "DNF", "D0.00")
    changeStrToSimple = simpleStr
End Function

Function getDiffStepArray(intArray)
    Dim tmpArray()
    For i = 0 To UBound(intArray)-1
        ReDim Preserve tmpArray(i)
        tmpArray(i) = intArray(i+1) - intArray(i)
    Next
    getDiffStepArray = tmpArray
End Function

Function getCloseNumArray(intArray, numResult)
	'Dim intArray, diffNum, numResult
	'intArray = Array(1,5,8,15,16,17,25,34,54,55,56,57)
	'diffNum = 1
	'numResult = 5
	Dim i, j, diffStepArray1, diffStepArray2, newArray(), tmpArray, finalArray, flagNew, flagTmp
	j = 2
    diffStepArray1 = getDiffStepArray(intArray)
    diffStepArray2 = getDiffStepArray(diffStepArray1)
	flagNew = False
	flagTmp = False
    Redim Preserve newArray(1)
    newArray(0) = intArray(0)
    newArray(1) = intArray(1)
	For i = 0 To UBound(diffStepArray2)
        If j = numResult Then
            Exit For
        End If
        
        If Abs(diffStepArray2(i)) <= 2  Then
            Redim Preserve newArray(j)
            newArray(j) = intArray(i+2)
            j = j + 1
            flagNew = True
        Else
            If flagNew Then
                tmpArray = newArray
                newArray(0) = intArray(i)
                newArray(1) = intArray(i+1)
                j = 2
                flagTmp = True
            End If
        End If
    Next
    If flagTmp Then
        If UBound(tmpArray) >= UBound(newArray) Then
    	    finalArray = tmpArray
    	Else
    	    finalArray = newArray
    	End If
    ElseIf flagNew Then
        finalArray = newArray
    Else
        Redim Preserve newArray(0)
        finalArray = newArray
    End If
    getCloseNumArray = finalArray
    'msgboxArray(finalArray)
End Function

Function getFiveResult(str, countStart, numResult)
	Dim tmpStr, resultArray(5), countGetedResult, result(4,3), tmpStep, tmpStepResult, stepResult(4)
    countGetedResult = 0
    tmpStepResult = 0
    tmpStr = changeStrToSimple(Mid(str, countStart))
    dnfStep = getAllStepInStr(tmpStr, "D0.00")
    tmpStep = getAllStepInStr(tmpStr, "0.00")
    If UBound(tmpStep) >= numResult-1 Then
        tmpStep = getCloseNumArray(tmpStep, numResult)
        If UBound(tmpStep) > 0 Then
            '//'modified tmpStep For DNF
            If dnfStep(0) <> "" Then
                For k = UBound(dnfStep) To 0 Step -1
                    For l = 0 To UBound(tmpStep)
                        If tmpStep(l)-1 = dnfStep(k) Then
                            tmpStep(l) = dnfStep(k)
                        ElseIf tmpStep(l)-2 > dnfStep(k) Then
                            tmpStep(l) = tmpStep(l) - 2
                        End If
                    Next
                Next
            End If

            '//'get result with tmpStep
	        For i = 0 To UBound(tmpStep)
	        	tmpStep(i) = tmpStep(i) + countStart - 1
	        	resultArray(i) = Mid(str, tmpStep(i), 4)
	        	If isD(Mid(str, tmpStep(i), 1)) Then
	        		resultArray(i) = "DNF"
	        	Else
		        	If tmpStep(i) > 3 Then
		        		num1 = Mid(str, tmpStep(i)-3, 1)
		        		num2 = Mid(str, tmpStep(i)-2, 1)
		        		num3 = Mid(str, tmpStep(i)-1, 1)
		        	ElseIf tmpStep(i) > 1 Then
		        	    num3 = Mid(str, tmpStep(i)-1, 1)
		        	End If

		        	If IsNumeric(num3) Then
		        		resultArray(i) = num3 & resultArray(i)
		        	    If isColon(num2) And IsNumeric(num1) Then
		        	    	resultArray(i) = num1 & num2 & resultArray(i)
		        	    End If
		        	End If
		        End If
	        Next
	    End If
	End If
    getFiveResult = resultArray
End Function


'Function getFiveResult(str, countStart, numResult)
'    Dim resultArray(5), countGetedResult, result(4,3), searchStepResult(4)
'    countGetedResult = 0
'    countPoint = Instr(countStart, str, ".")
'    Do Until ((Not (countPoint-countStart)> 0) Or (countGetedResult = numResult))
'    	If (countPoint-countStart) > 1 Then
'            result(countGetedResult,0) = Mid(str, countPoint-2, 1)
'        End If
'        result(countGetedResult,1) = Mid(str, countPoint-1, 1)
'        result(countGetedResult,2) = Mid(str, countPoint+1, 1)
'        result(countGetedResult,3) = Mid(str, countPoint+2, 1)
'
'        If (countPoint-countStart) > 3 Then
'            If Mid(str, countPoint-3, 1) = ":" Or Mid(str, countPoint-3, 1) = "：" Then
'                If IsNumeric(Mid(str, countPoint-4, 1)) Then
'                    strColon = Mid(str, countPoint-4, 1)
'                End If
'            End If
'        End If
'
'        If IsNumeric(result(countGetedResult,0)) Then
'            str1 = result(countGetedResult,0)
'        End If
'        If IsNumeric(result(countGetedResult,1)) Then
'            str2 = result(countGetedResult,1)
'        End If
'        If IsNumeric(result(countGetedResult,2)) Then
'            str3 = result(countGetedResult,2)
'        End If
'        If IsNumeric(result(countGetedResult,3)) Then
'            str4 = result(countGetedResult,3)
'        End If
'
'        If strColon <> "" Then
'            resultTmp = strColon & ":" & str1 & str2 & "." & str3 & str4
'        Else
'            resultTmp = str1 & str2 & "." & str3 & str4
'        End If
'
'        If (resultTmp <> ".") And (str1 & str2 <> "") And (str3 & str4 <> "") Then
'            resultArray(countGetedResult) = resultTmp
'            searchStepResult(countGetedResult) = countPoint
'            If countGetedResult > 0 Then
'            	If searchStepResult(countGetedResult) - searchStepResult(countGetedResult-1) > 12 Then
'            		resultArray(countGetedResult) = ""
'            		Exit Do
'            	Else
'                    countGetedResult = countGetedResult + 1
'                End If
'            Else
'                countGetedResult = countGetedResult + 1
'            End If
'        End If
'        countPoint = Instr(countPoint+1, str, ".")
'    Loop
'
'    'Case:"1. 2. 3. 4. 5."
'    If (numResult = 5) And (result(0,1) = "1") And (result(2,1) = "2") And (result(4,1) = "3") Then
'    	For j = 0 To 4
'            str = RePlace(str, ".", " ", 1, 1)
'            str = RePlace(str, ".", "point", 1, 1)
'        Next
'        str = RePlace(str, "point", ".", 1, 5)
'
'        'Msgbox(str)
'
'        resultArray(5) = str
'    End If
'    getFiveResult = resultArray
'End Function

Function getFmResult(str, countStart)
	Dim countFm, strTmp1, strTmp2, fmResult(2), countGetedResult, searchStep, searchStepResult(2), tmpFmResult
	countFm = ""
	countGetedResult = 0
	searchStep = 0
    
    Do Until (countGetedResult = 3) Or (searchStep > 20)
	    strTmp1 = Mid(str, countStart+searchStep+1, 1)
		strTmp2 = Mid(str, countStart+searchStep+2, 1)
		If IsNumeric(strTmp1) And IsNumeric(strTmp2) Then
			fmResult(countGetedResult) = strTmp1 & strTmp2
			searchStepResult(countGetedResult) = countStart + searchStep + 1
		    searchStep = searchStep + 2
		    If countGetedResult > 0 Then
		    	If searchStepResult(countGetedResult) - searchStepResult(countGetedResult-1) > 6 Then
		    		fmResult(countGetedResult) = ""
		    		Exit Do
		    	Else
			        countGetedResult = countGetedResult + 1
			    End If
			Else
			    countGetedResult = countGetedResult + 1
			End If
	    Else
	        searchStep = searchStep + 1
		End If
	Loop

	If countGetedResult <> 3 Then
		tmpFmResult = getFmResultSpecial(str, countStart)
		If (tmpFmResult(2) <> "") Then
			getFmResult = tmpFmResult
		ElseIf (tmpFmResult(1) <> "") And (countGetedResult < 2) Then
		    getFmResult = tmpFmResult
		ElseIf (tmpFmResult(0) <> "") And (countGetedResult < 1) Then
		    getFmResult = tmpFmResult
		Else
		    getFmResult = fmResult
		End If
	Else
	    getFmResult = fmResult
	End If
End Function

Function getFmResultSpecial(str, countStart)
    Dim countFm, strTmp1, strTmp2, fmResult(2), countGetedResult, searchStep
	countFm = ""
	countGetedResult = 0
	searchStep = 0

	Select Case True
	    Case InStr(countStart, str, "Total steps") > 0
	        countFm = InStr(countStart, str, "Total steps")
	End Select

	Do Until (Not countFm > 0) Or (countGetedResult = 3) Or (searchStep > Len(str)-countFm-2)
		strTmp1 = Mid(str, countFm+searchStep+1, 1)
		strTmp2 = Mid(str, countFm+searchStep+2, 1)
		If IsNumeric(strTmp1) And IsNumeric(strTmp2) Then
			fmResult(countGetedResult) = strTmp1 & strTmp2
			countGetedResult = countGetedResult + 1
			countFm = InStr(countFm+11, str, "Total steps")
			searchStep = 0
		End If
		searchStep = searchStep + 1
	Loop
    getFmResultSpecial = fmResult
End Function

Function getArrayResult(str, countCheck, numResult, projectName)
    Dim tmpResultArray, resultArray
    If projectName <> "333fm" Then
        tmpResultArray = getFiveResult(str, countCheck, numResult)
        If (numResult = 5) And (tmpResultArray(5) <> "") Then
            resultArray = getFiveResult(tmpResultArray(5), countCheck, 5)
        Else
            resultArray = tmpResultArray
        End If
    Else
        resultArray = getFmResult(str, countCheck)
    End If
    getArrayResult = resultArray
End Function

Function getAllProjectName()
    tmpArray = Array("333","444","555","222","333bf","333oh","333fm","mega","py","sq","clock","sk","666","777")
    getAllProjectName = tmpArray
End Function

Function getProjectCheckStrArray(projectName)
    checkStrArray_333 = Array("beginFlag333 ","beginFlag333<br>"," 333 "," 333<br>","<br>333 ","<br>333<br>","三阶","三速")
    checkStrArray_444 = Array("beginFlag444"," 444","<br>444","四阶","四速")
    checkStrArray_555 = Array("beginFlag555"," 555","<br>555","五阶","五速")
    checkStrArray_222 = Array("beginFlag222"," 222","<br>222","二阶","二速")
    checkStrArray_666 = Array("beginFlag666"," 666","<br>666","六阶","六速")
    checkStrArray_777 = Array("beginFlag777"," 777","<br>777","七阶","七速")
    checkStrArray_333bf = Array("三盲","3bf","3BLD")
    checkStrArray_333oh = Array("三单","3oh","3OH","<br>oh","<br>OH"," oh"," OH")
    checkStrArray_333fm = Array("最少步","最小步","3fm","<br>fm","<br>FM"," fm"," FM")
    checkStrArray_mega = Array("五魔","mega","Mega","七阶","七速")
    checkStrArray_py = Array("塔","py","PY","yramid")
    checkStrArray_sq = Array("SQ","sq","Mega","七阶","七速")
    checkStrArray_clock = Array("表","clock","clk")
    checkStrArray_sk = Array("斜转","sk","SK")

    Select Case projectName
        Case "333"
            getProjectCheckStrArray = checkStrArray_333
        Case "444"
            getProjectCheckStrArray = checkStrArray_444
        Case "555"
            getProjectCheckStrArray = checkStrArray_555
        Case "222"
            getProjectCheckStrArray = checkStrArray_222
        Case "666"
            getProjectCheckStrArray = checkStrArray_666
        Case "777"
            getProjectCheckStrArray = checkStrArray_777
        Case "333bf"
            getProjectCheckStrArray = checkStrArray_333bf
        Case "333oh"
            getProjectCheckStrArray = checkStrArray_333oh
        Case "333fm"
            getProjectCheckStrArray = checkStrArray_333fm
        Case "mega"
            getProjectCheckStrArray = checkStrArray_mega
        Case "py"
            getProjectCheckStrArray = checkStrArray_py
        Case "sq"
            getProjectCheckStrArray = checkStrArray_sq
        Case "clock"
            getProjectCheckStrArray = checkStrArray_clock
        Case "sk"
            getProjectCheckStrArray = checkStrArray_sk
    End Select
End Function

Function getSeqOfProjectInStr(str, projectName)
    Dim seqFinal, tmpStr, checkStrArray, seqInStr
    seqFinal = ""
    tmpStr = str
    checkStrArray = getProjectCheckStrArray(projectName)

    If IsNumeric(projectName) Then
        tmpStr = "beginFlag" & tmpStr
    End If
    
    For i = 0 To UBound(checkStrArray)
        seqInStr = InStr(tmpStr, checkStrArray(i))
        If seqInStr > 0 Then
            seqFinal = seqInStr + Len(checkStrArray(i))
            Exit For
        End If
    Next

    If IsNumeric(projectName) And (seqFinal <> "") Then
    	seqFinal = seqFinal - 9
    End If

    getSeqOfProjectInStr = seqFinal
End Function

''''''''''''''''''''''''''''''''''''''

Function WritePagesCode()
    checkTxtFile(codeTxtPath)
    getSource(getUrl())
    Sleep(1000)

    Dim MaxPage, url, i
    MaxPage = getInfoFromTxt("尾页", "pn=", 3, "尾页", -2)
    For i = 2 To MaxPage
        url = getUrl() & "?pn=" & i
        getSource(url)
    Next
    'Sleep(1000)
    'getTextFromCode()
    Msgbox("Done!")
End Function

Function getTextFromCode()
    Dim strResult, strUserName, countStart
    strResult = getArrayFromTxt("j_d_post_content", "j_d_post_content", 40, "user-hide-post-down", -31)
    strUserName = getArrayFromTxt("img username", "username", 10, "src=", -11)
    For i = 0 to UBound(strUserName)
        If (strUserName(i) = "魔方英语会计学") AND (Instr(strResult(i),"--完--") > 0) Then
            countStart = i
            Exit For
        End If
    Next

    'For i = countStart+1 To UBound(strUserName)
        'msgbox(strUserName(i) & vbLf & strResult(i))
    'Next
    getCleanResult strResult, strUserName, countStart
End Function

Function getCleanResult(strResultArray, strUserNameArray, countStart)
    checkTxtFile(resultTxtPath)
    'addProjectName("333")
    Dim allProjectArray, seqProjectInStr

    For i = countStart+1 To UBound(strResultArray)
        allProjectArray = getAllProjectName()
        For j = 0 To UBound(allProjectArray)
            seqProjectInStr = getSeqOfProjectInStr(strResultArray(i), allProjectArray(j))
            If seqProjectInStr <> "" Then
                getStrResult strResultArray(i), strUserNameArray(i), seqProjectInStr, allProjectArray(j)
            End If
        Next
    Next

    writeResultToExcel resultData, userNameData
    Msgbox("OK")
End Function

Function getStrResult(str, strUserName, countCheck, projectName)
    If countCheck <> "" Then
        Dim finalResultArray, strResult, j, numResult
        strResult = projectName
        numResult = 5

        If (projectName = "333bf") Or (projectName = "333fm") Then
            numResult = 3
        End If

        finalResultArray = getArrayResult(str, countCheck, numResult, projectName)

        For j = 0 To numResult-1
            strResult = strResult & " " & finalResultArray(j)
        Next

        saveResult str, strResult, strUserName
    End If
End Function

Function saveResult(str, strResult, strUserName)
    Dim oTxt
    Set oTxt = Fso.OpenTextFile(resultTxtPath, 8)

    ReDim Preserve userNameData(countData)
    ReDim Preserve resultData(countData)
    userNameData(countData) = strUserName
    resultData(countData) = strResult
    countData = countData + 1

    oTxt.WriteLine(str)
    oTxt.WriteLine(strResult)
    oTxt.WriteLine()
    oTxt.WriteLine()

    Set oTxt = Nothing
End Function

Function addProjectName(projectName)
    countData = countData + 1
    ReDim Preserve userNameData(countData)
    ReDim Preserve resultData(countData)
    userNameData(countData-1) = ""
    resultData(countData-1) = ""
    userNameData(countData) = projectName
    resultData(countData) = ""
    countData = countData + 1
End Function

Function writeResultToExcel(strResult, strUserName)
    Dim ExcelApp, ExcelBook, ExcelSheet, strResultArray
    Set ExcelApp = CreateObject("Excel.Application")
    Set ExcelBook= ExcelApp.Workbooks.Open(ws.CurrentDirectory&"\result.xlsx")
    Set ExcelSheet = ExcelBook.Sheets("Sheet1")

    ExcelSheet.Columns("A:G").NumberFormatLocal = "@"

    For i = 0 To UBound(strResult)
        If strResult(i) <> "" Then
            strResultArray = Split(strResult(i), " ")
        Else
            ReDim strResultArray(4)
        End If

        ExcelSheet.Cells(i+2,1).Value = strUserName(i)
        For j = 0 To UBound(strResultArray)
            ExcelSheet.Cells(i+2,j+2).Value = strResultArray(j)
        Next
    Next

    ExcelBook.Save
    ExcelBook.Close
    ExcelApp.Quit
    Set ExcelSheet = Nothing
    Set ExcelBook = Nothing
    Set ExcelApp = Nothing
End Function

</Script>
</Body>
</Html>
