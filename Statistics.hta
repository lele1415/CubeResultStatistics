'//<!--
'//  更新日志：
'//
'//  12-14
'//      1. 解决成绩间隔不同时可能产生顺序错乱的问题
'//          checkCloseNum中的Else部分缺少"Exit For"
'//  
'//  20170102
'//      1. 增加去重功能（ID和项目相同）
'//      2. 按项目排序后的成绩写入txt文件
'//  
'//  遗留问题    
'//      1. 有DNF的时候，不同长度的成绩获取错乱
'//      2. 缺少实时保存已处理成绩的功能
'//      3. 缺少手动删除错误成绩的功能
'//  
'//-->

<Html>
<Head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<Title>666</Title>
</Head>
<Body bgcolor="#FFFFFF">

周赛链接: <input type="text" id="url">
<input type="button" id="getCode_id" onclick="getPagesCode()" value="Get code" />
已获取<b id="PageNum_id">0</b>页
<br>排除楼层: <input type="text" id="except_floor_id" />
<br>排除ID: <input type="text" id="except_name_id" />
<br><input type="button" id="getCode_id" onclick="getTextFromCode(0)" value="Get results" />
<br>floor: <input type="input" id="floorNumInput_id" size=1 />
<select id="inputProjectName_id">
    <option value="333">333</option>
    <option value="444">444</option>
    <option value="555">555</option>
    <option value="222">222</option>
    <option value="333bf">333bf</option>
    <option value="333oh">333oh</option>
    <option value="333fm">333fm</option>
    <option value="mega">mega</option>
    <option value="py">py</option>
    <option value="sq">sq</option>
    <option value="clock">clock</option>
    <option value="sk">sk</option>
    <option value="666">666</option>
    <option value="777">777</option>
</select>
<br><textarea id="inputResultText_id" rows="5" cols="30"></textarea>
<br><input type="button" id="fewResultsTest_id" onclick="fewResultsTest()" value="Test result" />
    <input type="button" id="inputResult_id" onclick="inputResult()" value="Input result" />
<br>
<br>
楼层: <b id="floorNum_id"></b>
<br> 
<input type="button" onclick="sortAllResults()" value="Sort results" />
<br> 
<input type="button" onclick="writeReslutsToExcel()" value="Write results" />
<!-- <br>
<br>
<input type="input" id="compNum_id" />
<input type="button" id="writeBr_id" onclick="writeBrTest()" value="write BR Test" /> -->

<Script Language="JavaScript"> 

//用于创建XMLHttpRequest对象 
function createXmlHttp() { 
    //根据window.XMLHttpRequest对象是否存在使用不同的创建方式 
    if (window.XMLHttpRequest) { 
        xmlHttp = new XMLHttpRequest(); //FireFox、Opera等浏览器支持的创建方式 
    } else { 
        xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");//IE浏览器支持的创建方式 
    } 
} 

function getUrl() {
    var url = document.getElementById("url").value;
    return url;
}

//直接通过XMLHttpRequest对象获取远程网页源代码 
function getSource(url) { 
    //document.getElementById("source").value = "正在加载……"; //提示正在加载 
    createXmlHttp(); //创建XMLHttpRequest对象 
    xmlHttp.onreadystatechange = writeSource; //设置回调函数 
    xmlHttp.open("GET", url, true); 
    xmlHttp.send(null); 
} 

//将远程网页源代码写入页面文字区域 
function writeSource() { 
    if (xmlHttp.readyState == 4) { 
        //document.getElementById("source").value = xmlHttp.responseText; 
        writeToTxt(xmlHttp.responseText);
    } 
} 

function getValueById(id) {
    return document.getElementById(id).value;
}

function setInnerHtmlById(id, text) {
	document.getElementById(id).innerHTML = text;
}

</Script>
<Script Language="VBScript">

Dim width,height
width=CreateObject("HtmlFile").ParentWindow.Screen.AvailWidth
Window.MoveTo width-400,300
Window.ResizeTo 400,400

Dim ws, Fso, codeTxtPath, floorData(), userNameData(), projectData(), resultData(), countResultData, avgResultData(), bestResultData()
Set ws=CreateObject("wscript.shell")
Set Fso=CreateObject("Scripting.FileSystemObject")
codeTxtPath = ws.CurrentDirectory&"\temp.txt"
resultTxtPath = ws.CurrentDirectory&"\result.txt"
noResultTxtPath = ws.CurrentDirectory&"\noResult.txt"
recordTxtPath = ws.CurrentDirectory&"\record.txt"
sortedResultPath = ws.CurrentDirectory&"\sortedResult.txt"
countResultData = 0
Dim floorDataNoResult(), userNameDataNoResult(), projectDataNoResult(), countNoResultData
countNoResultData = 0
Dim brResultDate(), brResultCount, strCompNum
ReDim brResultDate(3,0)
brResultCount = 0
strCompNum = 0
Dim userNameData_333, resultData_333
Dim userNameData_444, resultData_444
Dim userNameData_555, resultData_555
Dim userNameData_222, resultData_222
Dim userNameData_333bf, resultData_333bf
Dim userNameData_333oh, resultData_333oh
Dim userNameData_333fm, resultData_333fm
Dim userNameData_py, resultData_py
Dim userNameData_mega, resultData_mega
Dim userNameData_sq, resultData_sq
Dim userNameData_clock, ResultData_clock
Dim userNameData_sk, resultData_sk
Dim userNameData_666, resultData_666
Dim userNameData_777, resultData_777
Dim countExcelRow
countExcelRow = 0
Dim debug, inputFlag, listFlag
debug = False
inputFlag = False
listFlag = False

Sub Sleep(MSecs)  
    Dim fso
    Dim objOutputFile

    Set fso = CreateObject("Scripting.FileSystemObject") 
    If Fso.FileExists("sleeper.vbs")=False Then 
        Set objOutputFile = fso.CreateTextFile("sleeper.vbs", True) 
        objOutputFile.Write "wscript.sleep WScript.Arguments(0)" 
        objOutputFile.Close 
    End If 
     CreateObject("WScript.Shell").Run "sleeper.vbs " & MSecs,1 , True 
End Sub

Function fewResultsTest()
    debug = True
    getTextFromCode(1)
End Function

Function inputResult()
    inputFlag = True
    getTextFromCode(1)
End Function

Function writeBrTest()
	strCompNum = document.getElementById("compNum_id").value
	folderPath = ws.CurrentDirectory & "\allResults\"
	oldFilePath = folderPath & (document.getElementById("compNum_id").value - 1) & ".xlsx"
	newFilePath = folderPath & document.getElementById("compNum_id").value & ".xlsx"
	If Fso.FileExists(oldFilePath) And Not Fso.FileExists(newFilePath) Then
	    Fso.CopyFile oldFilePath, newFilePath, False
	    brResultDate(0,0) = "444"
	    brResultDate(1,0) = "QAZZ海盗"
	    brResultDate(2,0) = True
	    brResultDate(3,0) = "21.00 19.23 20.11 20.22 20.33 20.44 20.55"
	    writeBrToExcel(newFilePath)
        Msgbox("write BR done!")
	Else
	    Msgbox(oldFilePath & Vblf & "not exist" & Vblf & " or" & Vblf & newFilePath & Vblf & "already exist")
	End If
End Function




'*************************************************
'****get code from Pages, and write into text file.
'*************************************************
Function getPagesCode()
    checkTxtFile(codeTxtPath)
    'getCode(getUrl())
    getSource(getUrl())
    setInnerHtmlById "PageNum_id", 1
    Sleep(1000)

    Dim MaxPage, url, i
    MaxPage = getInfoFromTxt("total_page", "total_page", 12, "};")
    If IsNumeric(MaxPage) Then
        For i = 2 To MaxPage
            url = getUrl() & "?pn=" & i
            'getCode(url)
            getSource(url)
            setInnerHtmlById "PageNum_id", i
            Sleep(1000)
        Next
        'Sleep(1000)
        'getTextFromCode(0)
        Msgbox("Done!")
    Else
        Msgbox("Fail! MaxPage=" & MaxPage)
    End If
End Function

        Function checkTxtFile(FilePath)
            If Fso.FileExists(FilePath) Then
                Dim TxtFile
                Set TxtFile = Fso.getFile(FilePath)
                TxtFile.Delete
                Set TxtFile = Nothing
            End If    
            Fso.CreateTextFile FilePath, True
        End Function

        Function writeToTxt(responseText)
            Set oTxt = Fso.OpenTextFile(codeTxtPath,8)
            oTxt.Write(responseText)
            oTxt.Close
            Set oTxt = Nothing
        End Function

        Function getInfoFromTxt(strSearch, strStart, numStart, strEnd)
            Dim oTxt, getStrLine, MaxPage, Flag
            Set oTxt = Fso.OpenTextFile(codeTxtPath,1)
            Flag = False

            Do Until oTxt.AtEndOfStream
                getStrLine = oTxt.ReadLine
                Sleep(10)
                If InStr(getStrLine,strSearch) > 0 Then
                    Flag = True
                    Exit Do
                End If
            Loop
            Set oTxt = Nothing
            If Flag Then
            	getStrLine = Mid(getStrLine, InStr(getStrLine, strSearch))
                countStart = InStr(getStrLine,strStart) + numStart
                getStrLine = Mid(getStrLine, countStart)
                countLength = InStr(getStrLine, strEnd) - 1
                'Msgbox(countStart & " " & countLength)
                getInfoFromTxt = Mid(getStrLine, 1, countLength)
            Else
                Msgbox("Not found """ & strSearch & """")
                getInfoFromTxt = ""
            End If
        End Function

        Function getCode(url)
            If url&"a"<>"a" then
                set xhp=createobject("microsoft.xmlhttp")
                xhp.open "get",url,false
                xhp.send
                writeToTxt(xhp.responseText)
            End If
        End Function



'*************************************************
'****get origin Str from Code for deal.
'*************************************************
Function getTextFromCode(testFlag)
    Dim tmpStrResult, strResult, strUserName, countStart
    tmpStrResult = getArrayFromTxt("j_d_post_content", "j_d_post_content", 40, "user-hide-post-down", -31)
    strResult = checkStrArrayForBubble(tmpStrResult)
    strUserName = getArrayFromTxt("p_author_name", "_blank", 8, "</a>", 0)
    strFloorNum = getShortStrArrayFromTxt("post_no&quot", "post_no&quot", 14, 4, ",")
    strCompNum = getInfoFromTxt("<title>", "第", 1, "期")
    If Not IsNumeric(strCompNum) Then
        strCompNum = InputBox("Input num of comp")
    End If
    If testFlag = 0 Then
        countStart = 0
        'For i = 0 to UBound(strUserName)
        '    If (strUserName(i) = "QAZZ海盗") AND (Instr(strResult(i),"--完--") > 0) Then
        '        countStart = i + 1
        '        Exit For
        '    End If
        '    If (strUserName(i) = "魔方英语会计学") AND (Instr(strResult(i),"--完--") > 0) Then
        '        countStart = i + 1
        '        Exit For
        '    End If
        'Next
    Else
        For i = 0 to UBound(strUserName)
            If strFloorNum(i) = getValueById("floorNumInput_id") Then
                countStart = i
                Exit For
            End If
        Next
    End If

    'For i = countStart+1 To UBound(strUserName)
        'msgbox(strUserName(i) & vbLf & strResult(i))
    'Next
    dealOriginStr strResult, strUserName, strFloorNum, countStart
End Function

        Function getArrayFromTxt(strSearch, strStart, numStart, strEnd, numEnd)
            Dim oTxt, getStrLine, MaxPage, strArray(), count
            Set oTxt = Fso.OpenTextFile(codeTxtPath,1)
            count = 0
            Do Until oTxt.AtEndOfStream
                getStrLine = oTxt.ReadLine
                If InStr(getStrLine,strSearch) > 0 Then
                    ReDim Preserve strArray(count)
                    countStart = InStr(getStrLine,strStart) + numStart
                    countEnd = InStr(getStrLine,strEnd) + numEnd
                    If (countStart > 0 And countEnd > 0) Then
                        strArray(count) = Mid(getStrLine, countStart, countEnd-countStart)
                        count = count + 1
                    'Else
                        'Msgbox(countStart & " " & countEnd & vbLf & getStrLine)
                    End If
                End If
            Loop
            Set oTxt = Nothing
            getArrayFromTxt = strArray
        End Function

        Function checkStrArrayForBubble(strArray)
            Dim tmpArray(), tmpStr
            For i = 0 To UBound(strArray)
                tmpStr = strArray(i)
                If InStr(tmpStr,"post_bubble_middle") > 0 Then
                    tmpStr = cutStrWithKey(tmpStr, "post_bubble_middle", 18, "post_bubble_bottom", 0)
                    tmpStr = cutStrWithKey(tmpStr, "png", 6, "</div>", 0)
                End If

                ReDim Preserve tmpArray(i)
                tmpArray(i) = tmpStr
            Next
            checkStrArrayForBubble = tmpArray
        End Function

        Function getShortStrArrayFromTxt(strSearch, strStart, numStart, strLen, strEnd)
            Dim oTxt, getStrLine, MaxPage, strArray(), count
            Set oTxt = Fso.OpenTextFile(codeTxtPath,1)
            count = 0
            Do Until oTxt.AtEndOfStream
                getStrLine = oTxt.ReadLine
                If InStr(getStrLine,strSearch) > 0 Then
                    ReDim Preserve strArray(count)
                    countStart = InStr(getStrLine,strStart) + numStart
                    'Msgbox(countStart & " " & countEnd)
                    tmpStr = Mid(getStrLine, countStart, strLen)
                    countEnd = InStr(tmpStr, strEnd)
                    If countEnd > 0 Then 
                        strArray(count) = Mid(tmpStr, 1, countEnd-1)
                        count = count + 1
                    End If
                End If
            Loop
            Set oTxt = Nothing
            getShortStrArrayFromTxt = strArray
        End Function



'*************************************************
'****deal origin Str.
'*************************************************
Function dealOriginStr(strResultArray, strUserNameArray, strFloorNum, countStart)
    If (Not inputFlag) And (Not debug) Then
        checkTxtFile(resultTxtPath)
        checkTxtFile(noResultTxtPath)
    End If
    Dim allProjectArray, seqProjectInStr, flag, projectArray(), projectCount, tmpResultStr, originStrResultArray
    ReDim projectArray(1,0)
    originStrResultArray = strResultArray

    If Not inputFlag Then
        For i = countStart To UBound(strResultArray)
        	If checkIsNeededFloor(strFloorNum(i)) And checkIsNeededName(strUserNameArray(i)) Then
	            strResultArray(i) = removeUselessStr(strResultArray(i))
	            setInnerHtmlById "floorNum_id", strFloorNum(i)
	            allProjectArray = getAllProjectName()
	            flag = True
	            projectCount = 0
	            For j = 0 To UBound(allProjectArray)
	                seqProjectInStr = getSeqOfProjectInStr(strResultArray(i), allProjectArray(j))
	                If seqProjectInStr > 0 Then
	                    ReDim Preserve projectArray(1,projectCount)
	                    projectArray(0,projectCount) = allProjectArray(j)
	                    projectArray(1,projectCount) = seqProjectInStr
	                    projectCount = projectCount + 1

	                    'getAndDealResult strResultArray(i), strUserNameArray(i), strFloorNum(i), seqProjectInStr, allProjectArray(j)
	                    flag = False
	                End If
	            Next
	            If flag Then
	                getAndDealResult strResultArray(i), strUserNameArray(i), strFloorNum(i), "", ""
	            Else
	                sortMultiArray projectArray, projectCount-1, 1, 1
	                For j = 0 To projectCount-1
	                    If projectArray(0,j) <> "333fm" Then
	                        tmpResultStr = strResultArray(i)
	                    Else
	                        tmpResultStr = removeUselessStrForFm(originStrResultArray(i))
	                    End If

	                    If j < projectCount-1 Then
	                        tmpResultStr = Mid(tmpResultStr, projectArray(1,j), projectArray(1,j+1) - projectArray(1,j))
	                    Else
	                        tmpResultStr = Mid(tmpResultStr, projectArray(1,j))
	                    End If

	                    getAndDealResult tmpResultStr, strUserNameArray(i), strFloorNum(i), 1, projectArray(0,j)
	                Next
	            End If

	            If debug Then
	                Exit For
	            End If
	        End If
        Next
    Else
        If getValueById("inputResultText_id") <> "" Then
            getAndDealResult getValueById("inputResultText_id"), strUserNameArray(countStart), strFloorNum(countStart), 1, getValueById("inputProjectName_id")
        Else
            getAndDealResult strResultArray(countStart), strUserNameArray(countStart), strFloorNum(countStart), 1, getValueById("inputProjectName_id")
        End If
    End If

    'writeReslutsToExcel()
    If Not inputFlag Then
        Msgbox("OK")
    End If
End Function

        Function getSeqOfProjectInStr(str, projectName)
            Dim tmpStr, checkStrArray, seqInStr
            seqInStr = ""
            tmpStr = LCase(str)
            checkStrArray = getProjectCheckStrArray(projectName)

            If IsNumeric(projectName) Then
                tmpStr = "beginFlag" & tmpStr
            End If
            
            For i = 0 To UBound(checkStrArray)
                seqInStr = InStr(tmpStr, checkStrArray(i))
                If seqInStr > 0 Then
                    If IsNumeric(projectName) And (Not InStr(checkStrArray(i), "beginFlag") > 0) Then
                        seqInStr = seqInStr - 9
                    End If
                    Exit For
                End If
            Next

            getSeqOfProjectInStr = seqInStr
        End Function

        Function checkIsNeededFloor(floor)
        	Dim exceptFloorList, flag
        	exceptFloorList = Split(getValueById("except_floor_id"), " ")
        	flag = True
        	For i = 0 To UBound(exceptFloorList)
        		If floor = exceptFloorList(i) Then
        			flag = False
        			Exit For
        		End If
        	Next
        	checkIsNeededFloor = flag
        End Function

        Function checkIsNeededName(name)
        	Dim exceptNameList, flag
        	exceptNameList = Split(getValueById("except_name_id"), " ")
        	flag = True
        	For i = 0 To UBound(exceptNameList)
        		If name = exceptNameList(i) Then
        			flag = False
        			Exit For
        		End If
        	Next
        	checkIsNeededName = flag
        End Function




'*************************************************
'****get result.
'*************************************************
Function getAndDealResult(str, strUserName, floorNum, countCheck, projectName)
    If countCheck <> "" Then
        Dim finalResultArray, strResult, j, numResult, avgResult, bestResult
        strResult = ""
        numResult = 5

        If (projectName = "333bf") Or (projectName = "333fm") Or (projectName = "666") Or (projectName = "777") Then
            numResult = 3
        End If

        If debug Then
            Msgbox("getAndDealResult str="&str)
            Msgbox("getAndDealResult countCheck="&countCheck)
        End If

        finalResultArray = getArrayResult(str, countCheck, numResult, projectName)

        If UBound(finalResultArray) > 0 Then
            If finalResultArray(2) <> "" Then
                avgAndBestResult = getAvgAndBestResult(finalResultArray)
                avgResult = avgAndBestResult(0)
                bestResult = avgAndBestResult(1)

                If projectName = "333fm" Then
                    bestResult = FormatNumber(bestResult, 0, , , 0)
                End If

                strResult = avgResult & " " & bestResult

                For j = 0 To UBound(finalResultArray)
                    strResult = strResult & " " & finalResultArray(j)
                Next

                strResult = Trim(strResult)
            Else
                avgResult = ""
                bestResult = ""
                strResult = ""
            End If
        Else
            avgResult = ""
            bestResult = ""
            strResult = ""
        End If

        If Not inputFlag Then
            saveResult str, strResult, strUserName, floorNum, projectName
        Else
            If projectName <> "333fm" Then
                If Msgbox(floorNum & "楼" & Vblf & strUserName & Vblf & str & Vblf & projectName & Vblf & strResult, 1) = 1 Then
                    saveResult str, strResult, strUserName, floorNum, projectName
                End If
            Else
                If Msgbox(floorNum & "楼" & Vblf & strUserName & Vblf & projectName & Vblf & strResult, 1) = 1 Then
                    saveResult str, strResult, strUserName, floorNum, projectName
                End If
            End If
        End If
    Else
        saveResult str, "", strUserName, floorNum, ""
    End If
End Function

        Function getArrayResult(str, countCheck, numResult, projectName)
            Dim resultArray
            If projectName <> "333fm" Then
                resultArray = getFiveResult(str, countCheck, numResult)
            Else
                resultArray = getFmResult(str, countCheck)
            End If
            getArrayResult = resultArray
        End Function

        Function getAvgAndBestResult(strArray)
            Dim tmpArray,avgAndBestResult(1)
            tmpArray = strArray

            For i = 0 To UBound(tmpArray)
                tmpArray(i) = changeResult(tmpArray(i))
            Next

            tmpArray = sortIntArray(tmpArray)
            If UBound(tmpArray) = 4 Then
                If tmpArray(3) <> 9999.99 Then
                    avgAndBestResult(0) = Round(((0 + tmpArray(1) + tmpArray(2) + tmpArray(3)) / 3), 2)
                Else
                    avgAndBestResult(0) = 9999.99
                End If
                avgAndBestResult(1) = tmpArray(0)
            Else
                If tmpArray(2) <> 9999.99 Then
                    avgAndBestResult(0) = Round(((0 + tmpArray(0) + tmpArray(1) + tmpArray(2)) / 3), 2)
                Else
                    avgAndBestResult(0) = 9999.99
                End If
                avgAndBestResult(1) = tmpArray(0)
            End If

            avgAndBestResult(0) = FormatNumber(avgAndBestResult(0), 2, , , 0)

            For i = 0 To UBound(avgAndBestResult)
                avgAndBestResult(i) = revertResult(avgAndBestResult(i))
            Next

            getAvgAndBestResult = avgAndBestResult
        End Function

        Function getFiveResult(str, countStart, numResult)
            Dim tmpStr, tmpCountStart, SimpleStr, resultArray(), countGetedResult, result(4,3), resultStep, resultStep2, closeResultStep, tmpStepResult, stepResult(4), num(3)
            ReDim Preserve resultArray(0)
            countGetedResult = 0
            tmpStepResult = 0
            tmpStr = str
            tmpCountStart = countStart

            checkListExist tmpStr, tmpCountStart, Array("成绩列表","详细时间")

            SimpleStr = changeStrToSimple(Mid(tmpStr, tmpCountStart))
            dnfStep = getAllStepInStr(SimpleStr, "D0.00")
            resultStep = getAllStepInStr(SimpleStr, "0.00")
            resultStep2 = resultStep

            For i = 0 To UBound(resultStep2)
        		For j = 1 To 4
                    If resultStep2(i) > j Then
                        num(j-1) = Mid(tmpStr, resultStep(i)+tmpCountStart-1-j, 1)
                    Else
                        num(j-1) = ""
                    End If
                Next
                If IsNumeric(num(0)) Then
                	For j = i To UBound(resultStep2)
                	    resultStep2(j) = resultStep2(j) - 1
                    Next
	                If isCharacter(num(1), ":：") Then
	                	If IsNumeric(num(2)) Then
	                        For j = i To UBound(resultStep2)
		                	    resultStep2(j) = resultStep2(j) - 2
		                    Next
	                        If IsNumeric(num(3)) Then
	                            For j = i To UBound(resultStep2)
			                	    resultStep2(j) = resultStep2(j) - 1
			                    Next
	                        End If
	                    End If
                    ElseIf IsNumeric(num(1)) Then
                        For j = i To UBound(resultStep2)
                            resultStep2(j) = resultStep2(j) - 1
                        Next
                    End If
	            End If
                clearArray(num)
	        Next

            If debug Then
                Msgbox("getFiveResult tmpStr="&tmpStr)
                Msgbox("getFiveResult SimpleStr="&SimpleStr)
                msgboxArray "getFiveResult resultStep=", resultStep
                msgboxArray "getFiveResult resultStep2=", resultStep2
            End If

            If UBound(resultStep2) >= numResult-1 Then
                closeResultStep = getCloseNumArray(resultStep2, numResult)
                If UBound(closeResultStep) = numResult - 1 Then
                    For i = 0 To UBound(closeResultStep)
                    	closeResultStep(i) = resultStep(closeResultStep(i))
                    Next

                    If debug Then
                        msgboxArray "getFiveResult closeResultStep=", closeResultStep
                    End If

                    If UBound(closeResultStep) > 0 Then
                        '//'modified tmpStep For DNF
                        If dnfStep(0) <> "" Then
                            For k = UBound(dnfStep) To 0 Step -1
                                For l = 0 To UBound(closeResultStep)
                                    If closeResultStep(l)-1 = dnfStep(k) Then
                                        closeResultStep(l) = dnfStep(k)
                                    ElseIf closeResultStep(l)-2 > dnfStep(k) Then
                                        closeResultStep(l) = closeResultStep(l) - 2
                                    End If
                                Next
                            Next
                        End If

                        '//'get result with closeResultStep
                        For i = 0 To UBound(closeResultStep)
                            ReDim Preserve resultArray(i)
                            closeResultStep(i) = closeResultStep(i) + tmpCountStart - 1
                            resultArray(i) = Mid(tmpStr, closeResultStep(i), 4)
                            If isCharacter(Mid(tmpStr, closeResultStep(i), 1), "Dd") Then
                                resultArray(i) = "DNF"
                            Else
                                For j = 1 To 4
                                    If closeResultStep(i) > j Then
                                        num(j-1) = Mid(tmpStr, closeResultStep(i)-j, 1)
                                    Else
                                        num(j-1) = ""
                                    End If
                                Next

                                If IsNumeric(num(0)) Then
                                    resultArray(i) = revertResult(num(0) & resultArray(i))
                                    If isCharacter(num(1), ":：") Then
                                        If IsNumeric(num(2)) Then
                                            resultArray(i) = num(2) & ":" & resultArray(i)
                                            If IsNumeric(num(3)) Then
                                                resultArray(i) = num(3) & resultArray(i)
                                            End If
                                        End If
                                    ElseIf IsNumeric(num(1)) Then
                                        resultArray(i) = revertResult(num(1) & resultArray(i))
                                    End If
                                End If

                            End If
                        Next

                    End If
                End If
            End If
            If debug Then
                msgboxArray "getFiveResult resultArray=", resultArray
            End If
            getFiveResult = resultArray
        End Function

                Function checkListExist(tmpStr, tmpCountStart, keyArray)
                    Dim inStrCount
                    For i = 0 To UBound(keyArray)
                        inStrCount = InStr(tmpStr, keyArray(i))
                        If inStrCount > 0 Then
                            tmpStr = Mid(tmpStr, inStrCount)
                            tmpCountStart = 1
                            listFlag = True
                            Exit For
                        Else
                            listFlag = False
                        End If
                    Next
                End Function

        Function changeStrToSimple(str)
            Dim tmpStr, simpleStr
            tmpStr = str
            simpleStr = ""
            For searchStep = 1 To Len(tmpStr)
                Select Case True
                    Case IsNumeric(Mid(tmpStr, searchStep, 1))
                        simpleStr = simpleStr & "0"
                    Case isCharacter(Mid(tmpStr, searchStep, 1), "Dd")
                        simpleStr = simpleStr & "D"
                    Case isCharacter(Mid(tmpStr, searchStep, 1), "Nn")
                        simpleStr = simpleStr & "N"
                    Case isCharacter(Mid(tmpStr, searchStep, 1), "Ff")
                        simpleStr = simpleStr & "F"
                    Case isCharacter(Mid(tmpStr, searchStep, 1), ".。")
                        simpleStr = simpleStr & "."
                    Case isCharacter(Mid(tmpStr, searchStep, 1), ":：")
                        simpleStr = simpleStr & ":"
                    Case Else
                        simpleStr = simpleStr & "_"
                End Select
            Next
            simpleStr = RePlace(simpleStr, "DNF", "D0.00")
            changeStrToSimple = simpleStr
        End Function

        Function getAllStepInStr(str1, str2)
            Dim count, stepArray(), tmpStr1, tmpStr2
            count = 0
            tmpStr1 = str1
            tmpStr2 = str2
            If InStr(tmpStr1, tmpStr2) > 0 Then
                Do Until Not (InStr(tmpStr1, tmpStr2) > 0)
                    ReDim Preserve stepArray(count)
                    stepArray(count) = InStr(tmpStr1, tmpStr2) + count * Len(tmpStr2)
                    tmpStr1 = RePlace(tmpStr1, tmpStr2, "", 1, 1)
                    count = count + 1
                Loop
                getAllStepInStr = stepArray
            Else
                ReDim Preserve stepArray(0)
                getAllStepInStr = stepArray
            End If
        End Function

        Function getCloseNumArray(intArray, numResult)
            'Dim intArray, diffNum, numResult
            'intArray = Array(1,5,8,15,16,17,25,34,54,55,56,57)
            'diffNum = 1
            'numResult = 5
            Dim getedNum, diffStepArray1, diffStepArray2, newArray(), finalArray, noResultArray()
            getedNum = 2
            diffStepArray1 = getDiffStepArray(intArray)
            diffStepArray2 = getDiffStepArray(diffStepArray1)
            Redim Preserve newArray(1)
            newArray(0) = 0
            newArray(1) = 1
            checkCloseNum diffStepArray2, numResult, 0, getedNum, newArray

            If getedNum = numResult Then
                finalArray = newArray
            Else
                newArray(0) = 0
                newArray(1) = 1
                checkCloseNum diffStepArray2, numResult, 1, getedNum, newArray
                If getedNum = numResult Then
                    finalArray = newArray
                Else
                    Redim Preserve noResultArray(0)
                    finalArray = noResultArray
                End If
            End If
            If debug Then
                msgboxArray "getCloseNumArray diffStepArray1=", diffStepArray1
                msgboxArray "getCloseNumArray diffStepArray2=", diffStepArray2
                msgboxArray "getCloseNumArray finalArray=", finalArray
            End If
            getCloseNumArray = finalArray
        End Function

                Function checkCloseNum(numArray, numResult, limit, getedNum, newArray)
                    For i = 0 To UBound(numArray)
                        'If debug Then
                        '    Msgbox("checkCloseNum getedNum="&getedNum&" i="&i)
                        'End If
                        If getedNum = numResult Then
                            Exit For
                        End If
                        
                        If (Abs(numArray(i)) <= limit) Or (listFlag)  Then
                            Redim Preserve newArray(getedNum)
	                        newArray(getedNum) = i+2
                            'If debug Then
                            '    Msgbox("checkCloseNum in getedNum="&getedNum&" i="&i)
	                        'End If
                            getedNum = getedNum + 1
                        Else
                            getedNum = 2
                            newArray(0) = i+1
                            newArray(1) = i+2
                            Exit For
                        End If
                    Next
                End Function

                Function getDiffStepArray(intArray)
                    Dim tmpArray()
                    If UBound(intArray) > 0 Then
                        For i = 0 To UBound(intArray)-1
                            ReDim Preserve tmpArray(i)
                            tmpArray(i) = intArray(i+1) - intArray(i)
                        Next
                    Else
                        ReDim Preserve tmpArray(0)
                        tmpArray(0) = ""
                    End If
                    getDiffStepArray = tmpArray
                End Function

        Function getFmResult(str, countStart)
            Dim countFm, strTmp1, strTmp2, fmResult(2), countGetedResult, searchStep, searchStepResult(2), tmpFmResult, finalFmResult, specialFmResult
            countFm = ""
            countGetedResult = 0
            searchStep = 0

            If debug Then
                Msgbox("333fm str=" & Vblf & str)
            End If
            
            Do Until (countGetedResult = 3) Or (searchStep > Len(str)-countStart-1)
                strTmp1 = Mid(str, countStart+searchStep, 1)
                strTmp2 = Mid(str, countStart+searchStep+1, 1)
                If debug Then
                    Msgbox("333fm strTmp1=" & strTmp1 & Vblf & "strTmp2=" & strTmp2)
                End If
                If IsNumeric(strTmp1) And IsNumeric(strTmp2) Then
                    fmResult(countGetedResult) = strTmp1 & strTmp2
                    searchStepResult(countGetedResult) = countStart + searchStep + 1
                    searchStep = searchStep + 2
                    If countGetedResult > 0 Then
                        If searchStepResult(countGetedResult) - searchStepResult(countGetedResult-1) > 6 Then
                            fmResult(countGetedResult) = ""
                            Exit Do
                        Else
                            countGetedResult = countGetedResult + 1
                        End If
                    Else
                        countGetedResult = countGetedResult + 1
                    End If
                Else
                    searchStep = searchStep + 1
                End If
            Loop

            finalFmResult = fmResult
            If Not fmResult(2) > 0 Then
                specialFmResult = getFmResultSpecial(str, countStart)
                If specialFmResult(2) > 0 Then
                    finalFmResult = specialFmResult
                End If
            End If
            getFmResult = finalFmResult
        End Function

        Function getFmResultSpecial(str, countStart)
            Dim countFm, strTmp1, strTmp2, fmResult(2), countGetedResult, searchStep, searchStr
            countFm = 0
            countGetedResult = 0
            searchStep = 0
            searchStr = ""

            searchStrArray = Array("Total steps", "最终解法")

            For i = 0 To UBound(searchStrArray)
                countFm = InStr(countStart, str, searchStrArray(i))
                If countFm > 0 Then
                    searchStr = searchStrArray(i)
                    Exit For
                Else
                    countFm = 0
                End If
            Next

            If countFm > 0 Then
                Do Until (countGetedResult = 3) Or (searchStep > Len(str)-countFm-1)
                    strTmp1 = Mid(str, countFm+searchStep, 1)
                    strTmp2 = Mid(str, countFm+searchStep+1, 1)
                    If IsNumeric(strTmp1) And IsNumeric(strTmp2) Then
                        fmResult(countGetedResult) = strTmp1 & strTmp2
                        countGetedResult = countGetedResult + 1
                        countFm = InStr(countFm+Len(searchStr), str, searchStr)
                        searchStep = 0
                    End If
                    searchStep = searchStep + 1
                Loop
            End If
            getFmResultSpecial = fmResult
        End Function



'*************************************************
'****save result into text file.
'*************************************************
Function saveResult(str, strResult, strUserName, floorNum, projectName)
    Dim oTxt
    If strResult <> "" Then
        Set oTxt = Fso.OpenTextFile(resultTxtPath, 8)

        ReDim Preserve floorData(countResultData)
        ReDim Preserve userNameData(countResultData)
        ReDim Preserve projectData(countResultData)
        ReDim Preserve resultData(countResultData)
        floorData(countResultData) = floorNum & "楼"
        userNameData(countResultData) = strUserName
        projectData(countResultData) = projectName
        resultData(countResultData) = strResult

        oTxt.WriteLine(floorData(countResultData))
        oTxt.WriteLine(str)
        oTxt.WriteLine(userNameData(countResultData))
        oTxt.WriteLine(projectData(countResultData))
        oTxt.WriteLine(resultData(countResultData))
        oTxt.WriteLine()
        oTxt.WriteLine()

        countResultData = countResultData + 1
    Else
        Set oTxt = Fso.OpenTextFile(noResultTxtPath, 8)
        ReDim Preserve floorDataNoResult(countNoResultData)
        ReDim Preserve userNameDataNoResult(countNoResultData)
        ReDim Preserve projectDataNoResult(countNoResultData)
        floorDataNoResult(countNoResultData) = floorNum & "楼"
        userNameDataNoResult(countNoResultData) = strUserName
        projectDataNoResult(countNoResultData) = projectName

        oTxt.WriteLine(floorDataNoResult(countNoResultData))
        oTxt.WriteLine(str)
        oTxt.WriteLine(userNameDataNoResult(countNoResultData))
        oTxt.WriteLine(projectDataNoResult(countNoResultData))
        oTxt.WriteLine()
        oTxt.WriteLine()
    End If
    Set oTxt = Nothing
End Function



'*************************************************
'****write final result into excel file.
'*************************************************
Function sortAllResults()
    sortByProject()

    sortByAvgResult userNameData_333, resultData_333, 0
    sortByAvgResult userNameData_444, resultData_444, 0
    sortByAvgResult userNameData_555, resultData_555, 0
    sortByAvgResult userNameData_222, resultData_222, 0
    sortByAvgResult userNameData_333bf, resultData_333bf, 1
    sortByAvgResult userNameData_333oh, resultData_333oh, 0
    sortByAvgResult userNameData_333fm, resultData_333fm, 0
    sortByAvgResult userNameData_py, resultData_py, 0
    sortByAvgResult userNameData_mega, resultData_mega, 0
    sortByAvgResult userNameData_sq, resultData_sq, 0
    sortByAvgResult userNameData_clock, resultData_clock, 0
    sortByAvgResult userNameData_sk, resultData_sk, 0
    sortByAvgResult userNameData_666, resultData_666, 0
    sortByAvgResult userNameData_777, resultData_777, 0

    Msgbox("Sort done!")
End Function

        Function sortByProject()
            checkTxtFile(sortedResultPath)
            Dim allProjectArray, tmpUserNameData(), tmpResultData()
            allProjectArray = getAllProjectName()
            count = 0
            

            For i = 0 To UBound(allProjectArray)
                ReDim Preserve tmpUserNameData(0)
                ReDim Preserve tmpResultData(0)
                tmpUserNameData(0) = ""
                tmpResultData(0) = ""
                count = 0

                For j = 0 To UBound(userNameData)
                    If projectData(j) = allProjectArray(i) Then
                        ReDim Preserve tmpUserNameData(count)
                        ReDim Preserve tmpResultData(count)
                        tmpUserNameData(count) = userNameData(j)
                        tmpResultData(count) = resultData(j)
                        count = count + 1
                    End If
                Next

                Select Case allProjectArray(i)
                    Case "333"
                        userNameData_333 = tmpUserNameData
                        resultData_333 = tmpResultData
                    Case "444"
                        userNameData_444 = tmpUserNameData
                        resultData_444 = tmpResultData
                    Case "555"
                        userNameData_555 = tmpUserNameData
                        resultData_555 = tmpResultData
                    Case "222"
                        userNameData_222 = tmpUserNameData
                        resultData_222 = tmpResultData
                    Case "333bf"
                        userNameData_333bf = tmpUserNameData
                        resultData_333bf = tmpResultData
                    Case "333oh"
                        userNameData_333oh = tmpUserNameData
                        resultData_333oh = tmpResultData
                    Case "333fm"
                        userNameData_333fm = tmpUserNameData
                        resultData_333fm = tmpResultData
                    Case "py"
                        userNameData_py = tmpUserNameData
                        resultData_py = tmpResultData
                    Case "mega"
                        userNameData_mega = tmpUserNameData
                        resultData_mega = tmpResultData
                    Case "sq"
                        userNameData_sq = tmpUserNameData
                        resultData_sq = tmpResultData
                    Case "clock"
                        userNameData_clock = tmpUserNameData
                        resultData_clock = tmpResultData
                    Case "sk"
                        userNameData_sk = tmpUserNameData
                        resultData_sk = tmpResultData
                    Case "666"
                        userNameData_666 = tmpUserNameData
                        resultData_666 = tmpResultData
                    Case "777"
                        userNameData_777 = tmpUserNameData
                        resultData_777 = tmpResultData
                End Select
            Next

            writeSortedResult userNameData_333, resultData_333
            writeSortedResult userNameData_444, resultData_444
            writeSortedResult userNameData_555, resultData_555
            writeSortedResult userNameData_222, resultData_222
            writeSortedResult userNameData_333bf, resultData_333bf
            writeSortedResult userNameData_333oh, resultData_333oh
            writeSortedResult userNameData_333fm, resultData_333fm
            writeSortedResult userNameData_py, resultData_py
            writeSortedResult userNameData_mega, resultData_mega
            writeSortedResult userNameData_sq, resultData_sq
            writeSortedResult userNameData_clock, resultData_clock
            writeSortedResult userNameData_666, resultData_666
            writeSortedResult userNameData_777, resultData_333
        End Function

            Function writeSortedResult(userNameDataSorted, resultDataSorted)
                Set oTxt = Fso.OpenTextFile(sortedResultPath, 8)
                oTxt.WriteLine()
                For i = 0 To UBound(userNameDataSorted)
                    oTxt.WriteLine(userNameDataSorted(i))
                    oTxt.WriteLine(resultDataSorted(i))
                    oTxt.WriteLine()
                Next
                Set oTxt = Nothing
            End Function

        Function sortByAvgResult(userNameArray, resultArray, flag)
            If UBound(resultArray) > 0 Then
	            checkAndPopSameResult userNameArray, resultArray

                For i = 0 To UBound(resultArray)-1
                    For j = i+1 To UBound(resultArray)
                        If resultArray(i) <> "" And resultArray(j) <> "" Then
                            tmpResultArray1 = Split(resultArray(i), " ")
                            tmpResultArray2 = Split(resultArray(j), " ")

                            tmpResultArray1(flag) = changeResult(tmpResultArray1(flag))
                            tmpResultArray2(flag) = changeResult(tmpResultArray2(flag))

                            If tmpResultArray1(flag) - tmpResultArray2(flag) > 0 Then
                                tmpStr = resultArray(i)
                                resultArray(i) = resultArray(j)
                                resultArray(j) = tmpStr

                                tmpStr = userNameArray(i)
                                userNameArray(i) = userNameArray(j)
                                userNameArray(j) = tmpStr
                            End If
                        Else
                            If resultArray(i) = "" Then
                                resultArray(i) = resultArray(j)
                                resultArray(j) = ""

                                userNameArray(i) = userNameArray(j)
                                userNameArray(j) = ""
                            End If
                        End If
                    Next
                Next
            End If
        End Function

            Function checkAndPopSameResult(userNameArray, resultArray)
                Dim sameResultCount, arrayLen
                sameResultCount = 0
                For currentCount = 1 To UBound(userNameArray)
                    For pastCount = 0 To currentCount-1
                        If userNameArray(currentCount) = userNameArray(pastCount) Then
                            MsgBox("[pop]: "&userNameArray(currentCount)&" "&resultArray(currentCount)&vbLf&"[keep]: "&userNameArray(pastCount)&" "&resultArray(pastCount))
                            coverInArray userNameArray, currentCount
                            coverInArray resultArray, currentCount
                            sameResultCount = sameResultCount + 1
                        End If
                    Next
                Next

                If sameResultCount > 0 Then
                    arrayLen = UBound(userNameArray)
                    ReDim Preserve userNameArray(arrayLen-sameResultCount)
                    ReDim Preserve resultArray(arrayLen-sameResultCount)
                End If
            End Function



'*************************************************
'****write final result into excel file.
'*************************************************
Function writeReslutsToExcel()
    Dim folderPath, oldFilePath, newFilePath
    folderPath = ws.CurrentDirectory & "\allResults\"
	oldFilePath = folderPath & (strCompNum - 1) & ".xlsx"
	newFilePath = folderPath & strCompNum & ".xlsx"
	If Fso.FileExists(oldFilePath) And Not Fso.FileExists(newFilePath) Then
	    Fso.CopyFile oldFilePath, newFilePath, False

	    Dim ExcelApp, ExcelBook, ExcelSheet
	    Set ExcelApp = CreateObject("Excel.Application")
	    Set ExcelBook= ExcelApp.Workbooks.Open(newFilePath)

	    For i=1 To ExcelBook.Sheets.Count
	    	If ExcelBook.Sheets(i).Name = "Sheet1" Then
	    		ExcelApp.DisplayAlerts = False
	    		ExcelBook.Sheets(i).Delete
	    		ExcelApp.DisplayAlerts = True
	    		Exit For
	    	End If
	    Next
	    'Set ExcelSheet = ExcelBook.Sheets("Sheet1")
	    Set ExcelSheet = ExcelBook.Sheets.Add

	    ExcelSheet.Columns("B").ColumnWidth = 15

	    writeAllProjectResult ExcelSheet, userNameData_333, resultData_333, "333"
	    writeAllProjectResult ExcelSheet, userNameData_444, resultData_444, "444"
	    writeAllProjectResult ExcelSheet, userNameData_555, resultData_555, "555"
	    writeAllProjectResult ExcelSheet, userNameData_222, resultData_222, "222"
	    writeAllProjectResult ExcelSheet, userNameData_333bf, resultData_333bf, "333bf"
	    writeAllProjectResult ExcelSheet, userNameData_333oh, resultData_333oh, "333oh"
	    writeAllProjectResult ExcelSheet, userNameData_333fm, resultData_333fm, "333fm"
	    writeAllProjectResult ExcelSheet, userNameData_py, resultData_py, "py"
	    writeAllProjectResult ExcelSheet, userNameData_mega, resultData_mega, "mega"
	    writeAllProjectResult ExcelSheet, userNameData_sq, resultData_sq, "sq"
	    writeAllProjectResult ExcelSheet, userNameData_clock, resultData_clock, "clock"
	    writeAllProjectResult ExcelSheet, userNameData_sk, resultData_sk, "sk"
	    writeAllProjectResult ExcelSheet, userNameData_666, resultData_666, "666"
	    writeAllProjectResult ExcelSheet, userNameData_777, resultData_777, "777"

	    ExcelBook.Save
	    ExcelBook.Close
	    ExcelApp.Quit
	    Set ExcelSheet = Nothing
	    Set ExcelBook = Nothing
	    Set ExcelApp = Nothing

	    If brResultCount > 0 Then
	        writeBrToExcel(newFilePath)
	    End If
	Else
	    Msgbox(oldFilePath & Vblf & "not exist" & Vblf & " or" & Vblf & newFilePath & Vblf & "already exist")
	End If

    Msgbox("Write done!")
End Function

        Function writeAllProjectResult(ExcelSheet, userNameArray, resultArray, projectName)
            Dim strResultArray, rankNum, avgRecordFlag, bestRecordFlag
            rankNum = 0
            countExcelRow = countExcelRow + 1
            For i = 1 To 9
                If i = 1 Then
                    ExcelSheet.Cells(countExcelRow, i).HorizontalAlignment = 2
                ElseIf i = 2 Then
                    ExcelSheet.Cells(countExcelRow, i).HorizontalAlignment = 3
                Else
                    ExcelSheet.Cells(countExcelRow, i).HorizontalAlignment = 4
                End If
                ExcelSheet.Cells(countExcelRow, i).Interior.Color = RGB(0,0,0)
                ExcelSheet.Cells(countExcelRow, i).Font.Color = RGB(255,255,255)
            Next

            ExcelSheet.Cells(countExcelRow, 1).Value = getFinalProjectName(projectName)
            ExcelSheet.Cells(countExcelRow, 2).Value = "ID"
            ExcelSheet.Cells(countExcelRow, 3).Value = "最好成绩"
            ExcelSheet.Cells(countExcelRow, 4).Value = "平均成绩"
            ExcelSheet.Cells(countExcelRow, 5).Value = "t1"
            ExcelSheet.Cells(countExcelRow, 6).Value = "t2"
            ExcelSheet.Cells(countExcelRow, 7).Value = "t3"
            ExcelSheet.Cells(countExcelRow, 8).Value = "t4"
            ExcelSheet.Cells(countExcelRow, 9).Value = "t5"

            For i = 0 To UBound(resultArray)
                countExcelRow = countExcelRow + 1
                rankNum = rankNum + 1
                If resultArray(i) <> "" Then
                    strResultArray = Split(resultArray(i), " ")
                    bestRecordFlag = compareToRecord(projectName, strResultArray(1), False)
                    avgRecordFlag = compareToRecord(projectName, strResultArray(0), True)
                Else
                    ReDim strResultArray(4)
                End If

                For j = 1 To 9
                    If j = 2 Then
                        ExcelSheet.Cells(countExcelRow, j).HorizontalAlignment = 2
                    Else
                        ExcelSheet.Cells(countExcelRow, j).HorizontalAlignment = 4
                    End If

                    If j = 4 Then
                        ExcelSheet.Cells(countExcelRow, j).Font.Bold = True
                    End If

                    If j < 3 Then
                        ExcelSheet.Cells(countExcelRow, j).Font.Color = RGB(247,83,9)
                    Else
                        ExcelSheet.Cells(countExcelRow, j).NumberFormat = "@"
                        ExcelSheet.Cells(countExcelRow, j).Font.Color = RGB(0,0,0)
                    End If

                    If isEvenNum(i) Then
                        ExcelSheet.Cells(countExcelRow, j).Interior.Color = RGB(255,255,255)
                    Else
                        ExcelSheet.Cells(countExcelRow, j).Interior.Color = RGB(230,230,230)
                    End If
                Next

                If bestRecordFlag Then
                    ExcelSheet.Cells(countExcelRow, 3).Interior.Color = RGB(255,192,0)
                    saveBrResult projectName, userNameArray(i), False, resultArray(i)
                End If
                If avgRecordFlag Then
                    ExcelSheet.Cells(countExcelRow, 4).Interior.Color = RGB(255,192,0)
                    saveBrResult projectName, userNameArray(i), True, resultArray(i)
                End If

                ExcelSheet.Cells(countExcelRow, 1).Value = rankNum
                ExcelSheet.Cells(countExcelRow, 2).Value = userNameArray(i)
                ExcelSheet.Cells(countExcelRow, 3).Value = strResultArray(1)
                ExcelSheet.Cells(countExcelRow, 4).Value = strResultArray(0)
                For j = 2 To UBound(strResultArray)
                    ExcelSheet.Cells(countExcelRow, j+3).Value = strResultArray(j)
                Next
            Next

            countExcelRow = countExcelRow + 1
        End Function

                Function saveBrResult(projectName, userName, isAvg, result)
                    ReDim Preserve brResultDate(3,brResultCount)
                    brResultDate(0,brResultCount) = projectName
                    brResultDate(1,brResultCount) = userName
                    brResultDate(2,brResultCount) = isAvg
                    brResultDate(3,brResultCount) = result
                    brResultCount = brResultCount + 1
                End Function



'*************************************************
'****write BR into excel file.
'*************************************************
Function writeBrToExcel(newFilePath)
    Dim ExcelApp, ExcelBook, ExcelSheet, brLine, resultArray
    Set ExcelApp = CreateObject("Excel.Application")
    Set ExcelBook= ExcelApp.Workbooks.Open(newFilePath)
    Set ExcelSheet = ExcelBook.Sheets("Sheet2")

    For i = 1 To 57
        For j = 1 To 10
            If i mod 4 = 0 Then
                ExcelSheet.Cells(i, j).Interior.Color = RGB(230,230,230)
            Else
                ExcelSheet.Cells(i, j).Interior.Color = RGB(250,250,250)
            End If
        Next
    Next
            
    For i = 0 To brResultCount-1
        resultArray = Split(brResultDate(3,i))
        brLine = getBrLine(brResultDate(0,i), brResultDate(2,i))

    	For j = 1 To 10
	        ExcelSheet.Cells(brLine, j).Interior.Color = RGB(255,218,101)
	    Next

        ExcelSheet.Cells(brLine, 4).Value = brResultDate(1,i)
        ExcelSheet.Cells(brLine, 5).Value = strCompNum & "期"

        If brResultDate(2,i) Then
            ExcelSheet.Cells(brLine, 2).Value = resultArray(0)
            For j = 2 To UBound(resultArray)
                ExcelSheet.Cells(brLine, 4+j).Value = resultArray(j)
            Next
        Else
            ExcelSheet.Cells(brLine, 2).Value = resultArray(1)
        End If
    Next

    ExcelBook.Save
    ExcelBook.Close
    ExcelApp.Quit
    Set ExcelSheet = Nothing
    Set ExcelBook = Nothing
    Set ExcelApp = Nothing
End Function

        Function getBrLine(projectName, isAvg)
            Dim allProjectArray, tmpLine
            allProjectArray = getAllProjectName()
            For i = 0 To UBound(allProjectArray)
                If allProjectArray(i) = projectName Then
                    tmpLine = i
                    Exit For
                End If
            Next
            tmpLine = (tmpLine + 1) * 4
            If isAvg Then
            	tmpLine = tmpLine + 1
            End If
            getBrLine = tmpLine
        End Function





'*************************************************
'*************************************************

Function cutStrWithKey(str, keyBegin, numBegin, keyEnd, numEnd)
    Dim tmpStr, countStart, countEnd
    tmpStr = str
    If keyBegin <> "" Then
        countStart = InStr(tmpStr, keyBegin) + numBegin
    Else
        countStart = 1
    End If
    countEnd = InStr(tmpStr, keyEnd) + numEnd
    tmpStr = Mid(tmpStr, countStart, countEnd-countStart)
    cutStrWithKey = tmpStr
End Function

Function msgboxArray(strBegin, strArray)
    Dim tmpStr
    tmpStr = strBegin
    For count = 0 To UBound(strArray)
    	tmpStr = tmpStr & " " & strArray(count)
    Next
    Msgbox(tmpStr)
End Function

Function getExistInArray(strArray, str)
    Dim countFinded, count
    countFinded = ""
    For count = 0 To UBound(strArray)
        If str = strArray(count) Then
            countFinded = count
            Exit For
        End If
    Next
    getExistInArray = countFinded
End Function

Function isCharacter(character,characters)
    Dim flag
    flag = False
    If InStr(characters, character) > 0 Then
        flag = True
    End If
    isCharacter = flag
End Function

Function isEvenNum(num)
    Dim flag, tmpNum
    flag = False
    tmpNum = num
    tmpNum = tmpNum / 2
    If tmpNum = Round(tmpNum, 0) Then
        flag = True
    End If
    isEvenNum = flag
End Function

Function getAllProjectName()
    tmpArray = Array("333","444","555","222","333bf","333oh","333fm","mega","py","sq","clock","sk","666","777")
    getAllProjectName = tmpArray
End Function

Function getFinalProjectName(projectName)
    Dim oldProjectNameArray, newProjectNameArray, finalProjectName
    oldProjectNameArray = getAllProjectName()
    newProjectNameArray = Array("三阶","四阶","五阶","二阶","三盲","三单","最少步","五魔","金字塔","SQ-1","魔表","斜转","六阶","七阶")

    For i = 0 To UBound(oldProjectNameArray)
        If projectName = oldProjectNameArray(i) Then
            finalProjectName = newProjectNameArray(i)
            Exit For
        End If
    Next

    getFinalProjectName = finalProjectName
End Function

Function getProjectCheckStrArray(projectName)
    checkStrArray_333 = Array("beginFlag333 "," 333 ","三阶","3阶","三速","3速")
    checkStrArray_444 = Array("beginFlag444"," 444","四阶","4阶","四速","4速")
    checkStrArray_555 = Array("beginFlag555"," 555","五阶","5阶","五速","5速")
    checkStrArray_222 = Array("beginFlag222"," 222","二阶","2阶","二速","2速")
    checkStrArray_666 = Array("beginFlag666"," 666","六阶","6阶","六速","6速")
    checkStrArray_777 = Array("beginFlag777"," 777","七阶","7阶","七速","7速")
    checkStrArray_333bf = Array("三盲","3bf","3bld")
    checkStrArray_333oh = Array("三单","3oh","oh ","3one")
    checkStrArray_333fm = Array("最少步","最小步","3fm","<br>fm"," fm")
    checkStrArray_mega = Array("五魔","mega")
    checkStrArray_py = Array("塔","py")
    checkStrArray_sq = Array("sq")
    checkStrArray_clock = Array(" 表","<br>表","魔表","clock","clk")
    checkStrArray_sk = Array("斜转","sk")

    Select Case projectName
        Case "333"
            getProjectCheckStrArray = checkStrArray_333
        Case "444"
            getProjectCheckStrArray = checkStrArray_444
        Case "555"
            getProjectCheckStrArray = checkStrArray_555
        Case "222"
            getProjectCheckStrArray = checkStrArray_222
        Case "666"
            getProjectCheckStrArray = checkStrArray_666
        Case "777"
            getProjectCheckStrArray = checkStrArray_777
        Case "333bf"
            getProjectCheckStrArray = checkStrArray_333bf
        Case "333oh"
            getProjectCheckStrArray = checkStrArray_333oh
        Case "333fm"
            getProjectCheckStrArray = checkStrArray_333fm
        Case "mega"
            getProjectCheckStrArray = checkStrArray_mega
        Case "py"
            getProjectCheckStrArray = checkStrArray_py
        Case "sq"
            getProjectCheckStrArray = checkStrArray_sq
        Case "clock"
            getProjectCheckStrArray = checkStrArray_clock
        Case "sk"
            getProjectCheckStrArray = checkStrArray_sk
    End Select
End Function

Function compareToRecord(projectName, result, isAvg)
    Dim projectNameArray, count, oTxt, recordStrLine, recordStrArray, recordFloat
    projectNameArray = getAllProjectName()
    Set oTxt = Fso.OpenTextFile(recordTxtPath, 1)

    For i = 0 To UBound(projectNameArray)
        If projectName = projectNameArray(i) Then
            count = i
            Exit For
        End If
    Next

    i = 0
    Do Until oTxt.AtEndOfStream
        recordStrLine = oTxt.ReadLine
        If i = count Then
            Exit Do
        End If
        i = i + 1
    Loop

    recordStrArray = Split(recordStrLine, " ")

    If isAvg Then
        recordFloat = changeResult(recordStrArray(2)) + 0
    Else
        recordFloat = changeResult(recordStrArray(1)) + 0
    End If

    If (changeResult(result) + 0) <= recordFloat Then
        compareToRecord = True
    Else
        compareToRecord = False
    End If
End Function

Function sortIntArray(intString)
    Dim i, j, length, tmpStr, tmpArray
    tmpArray = intString
    length = UBound(tmpArray)
    For i=0 to length-1
        For j=i+1 to length
            If (tmpArray(i) - tmpArray(j)) > 0 Then
                tmpStr = tmpArray(i)
                tmpArray(i) = tmpArray(j)
                tmpArray(j) = tmpStr
            End If
        Next
    Next
    sortIntArray = tmpArray
End Function

Function changeResult(result)
    Dim tmpStr
    tmpStr = result
    If tmpStr <> "DNF" And tmpStr <> "" Then
        colonInStr = InStr(tmpStr, ":")
        If colonInStr > 1 Then
            tmpStr = Mid(tmpStr, 1, colonInStr-1) * 60 + Mid(tmpStr, colonInStr+1)
        ElseIf colonInStr = 1 Then
            tmpStr = RePlace(tmpStr, ":", "")
        End If
        tmpStr = FormatNumber(tmpStr, 2, , , 0)
    ElseIf tmpStr = "DNF" Then
        tmpStr = 9999.99
    End If

    changeResult = tmpStr
End Function

Function revertResult(result)
    Dim tmpStr, minNum, secNum
    tmpStr = result
    If tmpStr = 9999.99 Then
        tmpStr = "DNF"
    ElseIf tmpStr > 59.99 Then
        minNum = int(tmpStr / 60)
        secNum = FormatNumber(tmpStr - minNum * 60, 2, , , 0)
        If secNum < 10.00 Then
            secNum = "0" & secNum
        End If
        tmpStr = minNum & ":" & secNum
    End If
    
    revertResult = tmpStr
End Function

Function removeUselessStr(str)
	Dim tmpStr
	tmpStr = str
	tmpStr = RePlace(tmpStr, "<br>", " ")
	tmpStr = RePlace(tmpStr, "(", "")
	tmpStr = RePlace(tmpStr, ")", "")
	tmpStr = RePlace(tmpStr, "（", "")
    tmpStr = RePlace(tmpStr, "）", "")
	tmpStr = RePlace(tmpStr, "&#39;", "'")

    Do Until Not (InStr(tmpStr, "  ") > 0)
        tmpStr = RePlace(tmpStr, "  ", " ")
    Loop

	removeUselessStr = tmpStr
End Function

Function removeUselessStrForFm(str)
    Dim tmpStr
    tmpStr = str
    tmpStr = RePlace(tmpStr, "<br>", " ")
    tmpStr = RePlace(tmpStr, "&#39;", "'")

    Do Until Not (InStr(tmpStr, "  ") > 0)
        tmpStr = RePlace(tmpStr, "  ", " ")
    Loop

    removeUselessStrForFm = tmpStr
End Function


FUnction clearArray(strArray)
	For i = 0 To UBound(strArray)
        strArray(i) = ""
    Next
End Function

Function sortMultiArray(mulitArray, ub1, ub2, keyNum)
    Dim tmpStr
    For i = 0 To ub1-1
        For j = 1 To ub1-i
            'Msgbox(mulitArray(keyNum, i) & " " & mulitArray(keyNum, i+j))
            If mulitArray(keyNum, i) > mulitArray(keyNum, i+j) Then
                For k = 0 To ub2
                    tmpStr = mulitArray(k, i)
                    mulitArray(k, i) = mulitArray(k, i+j)
                    mulitArray(k, i+j) = tmpStr
                Next
            End If
        Next
    Next
End Function

Function coverInArray(strArray, count)
	If count < UBound(strArray) Then
		For i = count To UBound(strArray)-1
			strArray(i) = strArray(i+1)
		Next
	End If
End Function




''''''''''''''''''''''''''''''''''''''











Function addProjectName(projectName)
    countResultData = countResultData + 1
    ReDim Preserve userNameData(countResultData)
    ReDim Preserve resultData(countResultData)
    userNameData(countResultData-1) = ""
    resultData(countResultData-1) = ""
    userNameData(countResultData) = projectName
    resultData(countResultData) = ""
    countResultData = countResultData + 1
End Function



</Script>
</Body>
</Html>
